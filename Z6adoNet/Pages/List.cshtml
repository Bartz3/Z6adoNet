@page
@model Zadanie6.Pages.ListModel
@{
	ViewData["Title"] = "Lista produktów";
}
<h2>Lista produktów</h2>
@*<form method="post">*@

<div> <a asp-page="Create" class="btn btn-primary ">Dodaj</a> </div>
<br />
<br />
<table class="table table-striped">
	<thead>
		<tr>
			<th scope="col">@Html.DisplayNameFor(model => Model.productList[2].id)  </th>
			<th scope="col">@Html.DisplayNameFor(model => Model.productList[2].name)</th>
			<th scope="col">@Html.DisplayNameFor(model => Model.productList[2].price)</th>
			<th scope="col">Akcja</th>
		</tr>
	</thead>
	<tbody> @foreach (var p in Model.productList) {
		<tr>
			<th scope="row">@Html.DisplayFor(m => p.id) @Html.HiddenFor(m => m.product.id) </th>
			<td>@Html.DisplayFor(m => p.name) @Html.HiddenFor(m => m.product.name) </td>
			<td>@Html.DisplayFor(m => p.price) @Html.HiddenFor(m => m.product.price) </td>
@*			@{ var d = new Dictionary<string, string>
			 {
			    { "id", "@p.id" },
			    { "name", "@p.name" }
			 };}*@
			<td> <a asp-page="Details" asp-route-id=@p.id >Szczegóły</a> | <a asp-page="Edit" asp-route-id=@p.id> Edytuj</a> | <a asp-page="Delete" asp-route-id=@p.id>Kasuj</a> | </td>
		</tr> }
	</tbody>
</table>
<br />
		<div class="form-group"> 
			<div > <a asp-page="Bucket" class=" btn btn-primary ">Koszyk</a> </div>
			<br />
			<div > <a asp-page="CreateCategory" class=" btn btn-primary ">Stwórz kategorie</a> </div>
			</div>


